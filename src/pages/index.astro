---
import Base from "$lib/layouts/Base.astro";
import Header from "$lib/layouts/partials/Header.astro";
import PrayerCard from "$lib/components/PrayerCard.svelte";
import NewsCard from "$lib/components/NewsCard.svelte";
import Donate from "$lib/components/Donate.svelte";
import JumuaCard from "$lib/components/JumuaCard.svelte";
import UpcomingEvents from "$lib/components/UpcomingEvents.svelte";
import EventCard from "$lib/components/EventCard.svelte";
import SimpleEventCard from "$lib/components/SimpleEventCard.svelte";

import getPrayerTimes from "$lib/lib/getPrayerTimes";
import type { PrayerTimeType } from "$lib/types";

// TODO: generate these times dynamically using an api
const times: PrayerTimeType[] = [];
const PRAYER_NAMES = new Set<string>(["Fajr", "Sunrise", "Dhuhr", "Asr", "Maghrib", "Isha"]);

const { data } = await getPrayerTimes();
const timesArray = Object.keys(data.timings);

const filteredTimes = timesArray.filter((time) => PRAYER_NAMES.has(time));

function formatTime(timeString: string) {
	const [hourString, minute] = timeString.split(":");
	const hour = +hourString % 24;
	return (hour % 12 || 12) + ":" + minute + (hour < 12 ? " AM" : " PM");
}

filteredTimes.forEach((filteredTime, index) => {
	const currentTime = data.timings[filteredTime];

	const previousPrayerTime = data.timings[filteredTimes[index - 1] ?? filteredTimes[index + 5]];
	const nextPrayerTime = data.timings[filteredTimes[index + 1] ?? filteredTimes[index - 5]];

	times.push({
		prayerName: filteredTime,
		prayerTime: formatTime(data.timings[filteredTime]),
		currentPrayerTime: currentTime,
		previousPrayerTime: previousPrayerTime,
		nextPrayerTime: nextPrayerTime
	});
});

const allPosts = await Astro.glob("./posts/*.md");

console.log(allPosts);

type News = {
	postDate: string;
	href: string;
	newsTitle: string;
	newsType: string;
	authorImage: {
		url: string;
		alt: string;
	};
	authorName: string;
};

const news: News[] = [
	...allPosts.map((post) => ({
		postDate: post.frontmatter.pubDate,
		href: post.url as string,
		authorName: post.frontmatter.author,
		authorImage: post.frontmatter.image,
		newsTitle: post.frontmatter.title,
		newsType: "News"
	}))
];

type GricEvents = {
	eventName: string;
	eventTime: string;
	eventDate: string;
	eventDescription: string;
	eventType: string;
};

const events: GricEvents[] = [
	{
		eventName: "Youth Basketball",
		eventDate: "Every Friday",
		eventTime: "9:00pm - 11:00pm",
		eventDescription: "Basketball for the youth.",
		eventType: "recurring"
	},
	{
		eventName: "Youth Basketball",
		eventDate: "Every Friday",
		eventTime: "9:00pm - 11:00pm",
		eventDescription: "Basketball for the youth.",
		eventType: "recurring"
	}
];
---

<Base>
	<Header />
	<main class="mx-auto max-w-[1440px] px-8">
		<div class="py-30">
			<h2 class="mb-6 text-6xl font-bold">Prayer Times</h2>
			<div class="grid grid-cols-1 gap-y-4 md:grid-cols-12 md:gap-x-4">
				<PrayerCard prayerTimes={times} />
				<JumuaCard time="12:40" />
			</div>
		</div>
		<div class="flex justify-center py-36">
			<div class="mb-8 lg:mb-16">
				<h2 class="mb-12 text-4xl font-extrabold tracking-tight text-black md:text-5xl lg:text-6xl">
					Upcoming Events
				</h2>
				<div class="grid h-full grid-cols-1 gap-10 md:grid-cols-12">
					<!-- left side card -->
					<div class="md:col-span-7">
						<EventCard
							eventName="Youth Basketball"
							eventDate="Every Friday"
							eventTime="9:00pm - 11:00pm"
							eventDescription="We run Basketball for the youth every Friday from 9pm to 11pm. Come join us."
							eventType="recurring"
							eventPic="https://images.unsplash.com/photo-1546519638-68e109498ffc?q=80&w=1000&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
						/>
					</div>
					<!-- Right side Cards -->
					<div class="flex flex-col justify-between md:col-span-5">
						<SimpleEventCard />
						<SimpleEventCard />
						<SimpleEventCard />
					</div>
				</div>
			</div>
		</div>
		<div class="py-36">
			<Donate />
		</div>
	</main>
</Base>
